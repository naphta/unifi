name: Test, build, and push

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: luke142367/Docker-Lint-Action@v0.1.0
  build:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Setup docker buildx
        uses: crazy-max/ghaction-docker-buildx@v0.1.0
      - name: Run docker login
        run: echo "${{ secrets.DOCKER_REPOSITORY_TOKEN }}" | docker login --username "${{ secrets.DOCKER_REPOSITORY_USERNAME }}" --password-stdin
      - name: Generate tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = context.payload.ref.replace(/^refs\/[a-zA-Z]+\/v/, '');
            return `${tag}`;
      - name: Run docker buildx (
        run: |-
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/s390x \
            --output "type=image,push=true" \
            --tag "jakehilluk/unifi:v${{ steps.tag.outputs.result }}" \
            --build-arg unifi_version="${{ steps.tag.outputs.result }}" \
            --build-arg self_contained="False" \
            --file Dockerfile.buildx \
            .
      - name: Run docker buildx (All in one)
        run: |-
          docker buildx build \
            --platform linux/amd64,linux/arm64,linux/s390x \
            --output "type=image,push=true" \
            --tag "jakehilluk/unifi:v${{ steps.tag.outputs.result }}-all-in-one" \
            --build-arg unifi_version="${{ steps.tag.outputs.result }}" \
            --build-arg self_contained="True" \
            --file Dockerfile.buildx \
            .
